/* app/globals.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  @apply bg-gray-100;
  background-color: #f0f4f8;
  background-image: url('/bg-image.webp');
  background-size: cover;
  background-position: center;
  font-family: 'Inter', sans-serif;
  padding: 0;
  margin:0;
}

input:-webkit-autofill {
  background-color: transparent !important;
  transition: background-color 1000s ease-in-out 0s;
  color: inherit;
}

.register {
  @apply w-full mt-5 mb-1 p-2 border-none focus:bg-slate-200 shadow-md text-[#323338] font-medium placeholder:text-[0.9rem] focus:outline-none ;
}

@keyframes subtle-gradient-animation {
  0% {background-position: 0% 50%;}

  50% {background-position: 100% 50%;}

  100% {background-position: 0% 50%;}
}

/* ✅ Custom Subtle Gradient */
.subtle {
  background-size: 300% 300%;
  background-image: linear-gradient(45deg, 
  #dbeafe, #aecbef, #7fa8d6, #5d86b5);
  animation: subtle-gradient-animation 6s infinite ease-in-out;
}


/*

'use client';

import React from 'react';
import { useRouter } from 'next/navigation';
import useAuth from '@/hooks/useAuth';

const Dashboard = () => {
  const router = useRouter();
  const { isAuthenticated, isLoading } = useAuth();
  localStorage.getItem('userName') || 'User';
  const hospitalName = localStorage.getItem('hospitalName') || 'Hospital';
  
  
  const handleLogout = () => {
    localStorage.removeItem('isAuthenticated'); 
    localStorage.removeItem('hospitalName');
    alert('Logged out successfully!');
    router.push('/');
  };

  
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center">
        <div className="text-2xl font-semibold text-blue-800">Loading...</div>
      </div>
    );
  }

  
  if (!isAuthenticated) {
    return null; 
  }

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col">
      
      <header className="bg-blue-700 text-white py-4 shadow-md">
        <div className="container mx-auto flex justify-between items-center px-6">
          <h1 className="text-2xl font-bold">ER Management Dashboard</h1>
          <button 
            onClick={handleLogout}
            className="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded-md transition"
          >
            Logout
          </button>
        </div>
      </header>
      
      
      <main className="flex-grow container mx-auto p-6">
        <div className="mb-6">
        <h2 className="text-3xl font-semibold text-blue-800 mb-6">Welcome,{hospitalName}</h2>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          
          {['Patients', 'Staff Management', 'Reports', 'Emergency Cases', 'Analytics', 'Settings'].map((item, index) => (
            <div key={index} className="p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition">
              <h3 className="text-xl font-semibold text-gray-700 mb-2">{item}</h3>
              <p className="text-gray-500">
                This section will provide details and management tools for {item.toLowerCase()}.
              </p>
            </div>
          ))}
        </div>
      </main>
      
     
      <footer className="bg-gray-800 text-white py-4">
        <div className="container mx-auto text-center">
          © {new Date().getFullYear()} ER Management Portal. All rights reserved.
        </div>
      </footer>
    </div>
  );
};

export default Dashboard;
*/